{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/codi/LMS/lms_native/components/Section.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport API from \"../api\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker } from '@react-native-community/picker';\nexport default function Section(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sections = _useState2[0],\n      setSections = _useState2[1];\n\n  var id = props.id;\n\n  var fetchdata = function fetchdata(id) {\n    return _regeneratorRuntime.async(function fetchdata$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(id && id !== \"\")) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.get(\"classroomsection/\" + id).then(function (res) {\n              var result = res.data.data;\n              setSections(result);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchdata(id);\n  }, [id]);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker, {\n    selectedValue: props.value,\n    onValueChange: props.onValueChange,\n    style: {\n      height: 50,\n      width: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    value: \"\",\n    label: \"Section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), sections.map(function (section) {\n    return React.createElement(Picker.Item, {\n      key: section.id,\n      value: section.id,\n      label: section.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/codi/LMS/lms_native/components/Section.jsx"],"names":["React","useState","useEffect","API","Picker","Section","props","sections","setSections","id","fetchdata","get","then","res","result","data","value","onValueChange","height","width","map","section","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP;;AAEA,SAASC,MAAT,QAAuB,gCAAvB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEnC,kBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,EAAE,GAAGH,KAAK,CAACG,EAAjB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAMD,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEXA,EAAE,IAAIA,EAAE,KAAG,EAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGRN,GAAG,CAACQ,GAAJ,uBAA4BF,EAA5B,EACDG,IADC,CACI,UAAAC,GAAG,EAAI;AACT,kBAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASA,IAAxB;AACAP,cAAAA,WAAW,CAACM,MAAD,CAAX;AACH,aAJC,CAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAUAZ,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,SAAS,CAACD,EAAD,CAAT;AACH,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEH,KAAK,CAACU,KADzB;AAEI,IAAA,aAAa,EAAEV,KAAK,CAACW,aAFzB;AAGI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,MAAD,CAAQ,IAAR;AACI,IAAA,KAAK,EAAC,EADV;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAWKZ,QAAQ,CAACa,GAAT,CAAa,UAAAC,OAAO;AAAA,WACjB,oBAAC,MAAD,CAAQ,IAAR;AACI,MAAA,GAAG,EAAEA,OAAO,CAACZ,EADjB;AAEI,MAAA,KAAK,EAAEY,OAAO,CAACZ,EAFnB;AAGI,MAAA,KAAK,EAAEY,OAAO,CAACC,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAApB,CAXL,CAFJ,CADJ;AAyBH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport { View } from \"react-native\";\nimport { Picker } from '@react-native-community/picker';\n\nexport default function Section(props) {\n\n    const [sections, setSections] = useState([]);\n    const id = props.id;\n\n    const fetchdata = async id => {\n\n        if(id && id!==\"\")\n        await API.get(`classroomsection/${id}`)\n            .then(res => {\n                const result = res.data.data;\n                setSections(result);\n            });\n    }\n\n    useEffect(() => {\n        fetchdata(id);\n    }, [id]);\n\n    return (\n        <View>\n\n            <Picker\n                selectedValue={props.value}\n                onValueChange={props.onValueChange}\n                style={{ height: 50, width: 150 }}\n            >\n\n                <Picker.Item\n                    value=\"\"\n                    label=\"Section\"\n                />\n\n                {sections.map(section => (\n                    <Picker.Item\n                        key={section.id}\n                        value={section.id}\n                        label={section.name}\n                    />\n                ))}\n\n            </Picker>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}