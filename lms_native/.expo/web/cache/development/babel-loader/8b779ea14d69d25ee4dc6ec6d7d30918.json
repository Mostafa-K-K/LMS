{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/codi/LMS/lms_native/Take_Attendance.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Table, TableWrapper, Row, Cell } from 'react-native-table-component';\nexport default function Take_Attendance() {\n  var _this = this;\n\n  var state = {\n    tableHead: ['Head', 'Head2', 'Head3', 'Head4'],\n    tableData: [['1', '2', '3', '4'], ['a', 'b', 'c', 'd'], ['1', '2', '3', '4'], ['a', 'b', 'c', 'd']]\n  };\n\n  var alertIndex = function alertIndex(index) {\n    Alert.alert(\"This is row \" + (index + 1));\n  };\n\n  var element = function element(data, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alertIndex(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.btn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.btnText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"button\")));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Table, {\n    borderStyle: {\n      borderColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Row, {\n    data: state.tableHead,\n    style: styles.head,\n    textStyle: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), state.tableData.map(function (rowData, index) {\n    return React.createElement(TableWrapper, {\n      key: index,\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, rowData.map(function (cellData, cellIndex) {\n      return React.createElement(Cell, {\n        key: cellIndex,\n        data: cellIndex === 3 ? element(cellData, index) : cellData,\n        textStyle: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 37\n        }\n      });\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  head: {\n    height: 40,\n    backgroundColor: '#808B97'\n  },\n  text: {\n    margin: 6\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#FFF1C1'\n  },\n  btn: {\n    width: 58,\n    height: 18,\n    backgroundColor: '#78B7BB',\n    borderRadius: 2\n  },\n  btnText: {\n    textAlign: 'center',\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["/opt/lampp/htdocs/codi/LMS/lms_native/Take_Attendance.js"],"names":["React","Table","TableWrapper","Row","Cell","Take_Attendance","state","tableHead","tableData","alertIndex","index","Alert","alert","element","data","styles","btn","btnText","container","borderColor","head","text","map","rowData","row","cellData","cellIndex","StyleSheet","create","flex","padding","paddingTop","backgroundColor","height","margin","flexDirection","width","borderRadius","textAlign","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,GAA9B,EAAmCC,IAAnC,QAA+C,8BAA/C;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAEtC,MAAMC,KAAK,GAAG;AACVC,IAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,OAA3B,CADD;AAEVC,IAAAA,SAAS,EAAE,CACP,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADO,EAEP,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAFO,EAGP,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAHO,EAIP,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAJO;AAFD,GAAd;;AAUA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACxBC,IAAAA,KAAK,CAACC,KAAN,mBAA2BF,KAAK,GAAG,CAAnC;AACH,GAFD;;AAIA,MAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOJ,KAAP;AAAA,WACZ,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMD,UAAU,CAACC,KAAD,CAAhB;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,CADY;AAAA,GAAhB;;AAQA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAEb,KAAK,CAACC,SAAjB;AAA4B,IAAA,KAAK,EAAEQ,MAAM,CAACK,IAA1C;AAAgD,IAAA,SAAS,EAAEL,MAAM,CAACM,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGQf,KAAK,CAACE,SAAN,CAAgBc,GAAhB,CAAoB,UAACC,OAAD,EAAUb,KAAV;AAAA,WAChB,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAnB;AAA0B,MAAA,KAAK,EAAEK,MAAM,CAACS,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQD,OAAO,CAACD,GAAR,CAAY,UAACG,QAAD,EAAWC,SAAX;AAAA,aACR,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,SAAX;AAAsB,QAAA,IAAI,EAAEA,SAAS,KAAK,CAAd,GAAkBb,OAAO,CAACY,QAAD,EAAWf,KAAX,CAAzB,GAA6Ce,QAAzE;AAAmF,QAAA,SAAS,EAAEV,MAAM,CAACM,IAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ;AAAA,KAAZ,CAFR,CADgB;AAAA,GAApB,CAHR,CADJ,CADJ;AAkBH;AACD,IAAMN,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AAAEW,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,OAAO,EAAE,EAApB;AAAwBC,IAAAA,UAAU,EAAE,EAApC;AAAwCC,IAAAA,eAAe,EAAE;AAAzD,GADkB;AAE7BZ,EAAAA,IAAI,EAAE;AAAEa,IAAAA,MAAM,EAAE,EAAV;AAAcD,IAAAA,eAAe,EAAE;AAA/B,GAFuB;AAG7BX,EAAAA,IAAI,EAAE;AAAEa,IAAAA,MAAM,EAAE;AAAV,GAHuB;AAI7BV,EAAAA,GAAG,EAAE;AAAEW,IAAAA,aAAa,EAAE,KAAjB;AAAwBH,IAAAA,eAAe,EAAE;AAAzC,GAJwB;AAK7BhB,EAAAA,GAAG,EAAE;AAAEoB,IAAAA,KAAK,EAAE,EAAT;AAAaH,IAAAA,MAAM,EAAE,EAArB;AAAyBD,IAAAA,eAAe,EAAE,SAA1C;AAAsDK,IAAAA,YAAY,EAAE;AAApE,GALwB;AAM7BpB,EAAAA,OAAO,EAAE;AAAEqB,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,KAAK,EAAE;AAA9B;AANoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, Alert } from 'react-native';\nimport { Table, TableWrapper, Row, Cell } from 'react-native-table-component';\n\nexport default function Take_Attendance() {\n\n    const state = {\n        tableHead: ['Head', 'Head2', 'Head3', 'Head4'],\n        tableData: [\n            ['1', '2', '3', '4'],\n            ['a', 'b', 'c', 'd'],\n            ['1', '2', '3', '4'],\n            ['a', 'b', 'c', 'd']\n        ]\n    }\n\n    const alertIndex = index => {\n        Alert.alert(`This is row ${index + 1}`);\n    }\n\n    const element = (data, index) => (\n        <TouchableOpacity onPress={() => alertIndex(index)}>\n            <View style={styles.btn}>\n                <Text style={styles.btnText}>button</Text>\n            </View>\n        </TouchableOpacity>\n    );\n\n    return (\n        <View style={styles.container}>\n            <Table borderStyle={{ borderColor: 'transparent' }}>\n                <Row data={state.tableHead} style={styles.head} textStyle={styles.text} />\n                {\n                    state.tableData.map((rowData, index) => (\n                        <TableWrapper key={index} style={styles.row}>\n                            {\n                                rowData.map((cellData, cellIndex) => (\n                                    <Cell key={cellIndex} data={cellIndex === 3 ? element(cellData, index) : cellData} textStyle={styles.text} />\n                                ))\n                            }\n                        </TableWrapper>\n                    ))\n                }\n            </Table>\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n    head: { height: 40, backgroundColor: '#808B97' },\n    text: { margin: 6 },\n    row: { flexDirection: 'row', backgroundColor: '#FFF1C1' },\n    btn: { width: 58, height: 18, backgroundColor: '#78B7BB',  borderRadius: 2 },\n    btnText: { textAlign: 'center', color: '#fff' }\n  });"]},"metadata":{},"sourceType":"module"}