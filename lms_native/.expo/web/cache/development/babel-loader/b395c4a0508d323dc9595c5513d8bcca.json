{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/codi/LMS/lms_native/components/Classroom.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport API from \"../api\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function Classroom_List(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      classrooms = _useState2[0],\n      setClassrooms = _useState2[1];\n\n  var fetchdata = function fetchdata() {\n    return _regeneratorRuntime.async(function fetchdata$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(API.get(\"classroom\").then(function (res) {\n              var result = res.data.data;\n              setClassrooms(result);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchdata();\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker, {\n    label: props.label,\n    selectedValue: selectedValue,\n    onValueChange: props.setSelectedValue,\n    style: {\n      height: 50,\n      width: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    value: \"\",\n    label: \"Classroom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), classrooms.map(function (classroom) {\n    return React.createElement(Picker.Item, {\n      key: classroom.id,\n      value: classroom.id,\n      label: classroom.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/codi/LMS/lms_native/components/Classroom.jsx"],"names":["React","useState","useEffect","API","Classroom_List","props","classrooms","setClassrooms","fetchdata","get","then","res","result","data","label","selectedValue","setSelectedValue","height","width","map","classroom","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP;;;;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE1C,kBAAoCJ,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOK,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRL,GAAG,CAACM,GAAJ,cACDC,IADC,CACI,UAAAC,GAAG,EAAI;AACT,kBAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASA,IAAxB;AACAN,cAAAA,aAAa,CAACK,MAAD,CAAb;AACH,aAJC,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAQAV,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEH,KAAK,CAACS,KADjB;AAEI,IAAA,aAAa,EAAEC,aAFnB;AAGI,IAAA,aAAa,EAAEV,KAAK,CAACW,gBAHzB;AAII,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,MAAD,CAAQ,IAAR;AACI,IAAA,KAAK,EAAC,EADV;AAEI,IAAA,KAAK,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAYKZ,UAAU,CAACa,GAAX,CAAe,UAAAC,SAAS;AAAA,WACrB,oBAAC,MAAD,CAAQ,IAAR;AACI,MAAA,GAAG,EAAEA,SAAS,CAACC,EADnB;AAEI,MAAA,KAAK,EAAED,SAAS,CAACC,EAFrB;AAGI,MAAA,KAAK,EAAED,SAAS,CAACE,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB;AAAA,GAAxB,CAZL,CAFJ,CADJ;AA0BH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport { View, Picker, StyleSheet } from \"react-native\";\n\nexport default function Classroom_List(props) {\n\n    const [classrooms, setClassrooms] = useState([]);\n\n    const fetchdata = async () => {\n        await API.get(`classroom`)\n            .then(res => {\n                const result = res.data.data;\n                setClassrooms(result);\n            });\n    }\n\n    useEffect(() => {\n        fetchdata();\n    }, []);\n\n    return (\n        <View>\n\n            <Picker\n                label={props.label}\n                selectedValue={selectedValue}\n                onValueChange={props.setSelectedValue}\n                style={{ height: 50, width: 150 }}\n            >\n\n                <Picker.Item\n                    value=\"\"\n                    label=\"Classroom\"\n                />\n\n                {classrooms.map(classroom => (\n                    <Picker.Item\n                        key={classroom.id}\n                        value={classroom.id}\n                        label={classroom.name}\n                    />\n                ))}\n\n            </Picker>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}