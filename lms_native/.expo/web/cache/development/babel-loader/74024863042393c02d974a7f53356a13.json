{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Codi/LMS/lms_native/Take_Attendance.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { DataTable } from 'react-native-paper';\nimport API from \"./api\";\nimport Attendance from \"./components/Attendance\";\nimport Classroom from \"./components/Classroom\";\nimport Section from \"./components/Section\";\nexport default function Take_Attendance() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      students = _useState2[0],\n      setStudents = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSubmit = _useState4[0],\n      setShowSubmit = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      attendance = _useState6[0],\n      setAttendance = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      section = _useState8[0],\n      setSection = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      classroom = _useState10[0],\n      setClassroom = _useState10[1];\n\n  var _useState11 = useState(\"Take Attendance\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nameSubmit = _useState12[0],\n      setNameSubmit = _useState12[1];\n\n  var today = new Date();\n  var year = today.getFullYear();\n  var month = today.getMonth() + 1;\n  var day = today.getDate();\n  if (month < 10) month = \"0\" + month;\n  if (day < 10) day = \"0\" + day;\n  var date = year + '-' + month + '-' + day;\n  var filter = {\n    section: section,\n    classroom: classroom\n  };\n\n  var fetchdata = function fetchdata() {\n    return _regeneratorRuntime.async(function fetchdata$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setAttendance({});\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.post(\"stu-sec-class\").then(function (res) {\n              var result = res.data.data;\n              var data = result.filter(function (s) {\n                return s.section_id == section;\n              });\n\n              if (data) {\n                data.map(function (s) {\n                  var attend = attendance;\n                  attend[s.id] = \"Present\";\n                  setAttendance(attend);\n                });\n              }\n\n              setStudents(data);\n            }));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(API.get(\"attendance\").then(function (res) {\n              var result = res.data.data;\n              var update = result.filter(function (a) {\n                return a.created_at.slice(0, 10) == date && a.section_id == section;\n              });\n\n              if (update && update.length) {\n                var attend = attendance;\n                update.map(function (s) {\n                  attend[s.student_id] = s.description;\n                });\n                setAttendance(attend);\n                setNameSubmit(\"Update Attendance\");\n              } else {\n                setNameSubmit(\"Take Attendance\");\n              }\n            }));\n\n          case 5:\n            if (classroom == \"\") setSection(\"\");\n            checkSubmit();\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkSubmit = function checkSubmit() {\n    section !== \"\" ? setShowSubmit(true) : setShowSubmit(false);\n  };\n\n  var changeDescription = function changeDescription(key, val) {\n    var attend = attendance;\n    attend[key] = val;\n    setAttendance(_objectSpread({}, attend));\n  };\n\n  var submitAttendance = function submitAttendance() {\n    var updateFunction, createFunction;\n    return _regeneratorRuntime.async(function submitAttendance$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            updateFunction = function updateFunction(update) {\n              var _loop, i;\n\n              return _regeneratorRuntime.async(function updateFunction$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _loop = function _loop(i) {\n                        var student, key, reqBody, att, id;\n                        return _regeneratorRuntime.async(function _loop$(_context2) {\n                          while (1) {\n                            switch (_context2.prev = _context2.next) {\n                              case 0:\n                                student = students[i];\n                                key = student.id;\n                                reqBody = {\n                                  description: attendance[key],\n                                  section_id: section,\n                                  student_id: key\n                                };\n                                att = update.find(function (a) {\n                                  return a.student_id == key;\n                                });\n                                id = att.id;\n                                _context2.next = 7;\n                                return _regeneratorRuntime.awrap(API.put(\"attendance/\" + id, reqBody));\n\n                              case 7:\n                              case \"end\":\n                                return _context2.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      };\n\n                      i = 0;\n\n                    case 2:\n                      if (!(i < students.length)) {\n                        _context3.next = 8;\n                        break;\n                      }\n\n                      _context3.next = 5;\n                      return _regeneratorRuntime.awrap(_loop(i));\n\n                    case 5:\n                      i++;\n                      _context3.next = 2;\n                      break;\n\n                    case 8:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            createFunction = function createFunction() {\n              return _regeneratorRuntime.async(function createFunction$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      students.map(function _callee(student) {\n                        var key, reqBody;\n                        return _regeneratorRuntime.async(function _callee$(_context4) {\n                          while (1) {\n                            switch (_context4.prev = _context4.next) {\n                              case 0:\n                                key = student.id;\n                                reqBody = {\n                                  description: attendance[key],\n                                  section_id: section,\n                                  student_id: key\n                                };\n                                _context4.next = 4;\n                                return _regeneratorRuntime.awrap(API.post(\"attendance\", reqBody));\n\n                              case 4:\n                              case \"end\":\n                                return _context4.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      });\n\n                    case 1:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(API.get(\"attendance\").then(function (res) {\n              var result = res.data.data;\n              var update = result.filter(function (a) {\n                return a.created_at.slice(0, 10) == date && a.section_id == section;\n              });\n\n              if (update && update.length) {\n                updateFunction(update);\n              } else {\n                createFunction();\n              }\n            }));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchdata();\n  }, [JSON.stringify(filter)]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#6D6F73', '#47484b'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Student Attendance \"), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.viewSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, React.createElement(Classroom, {\n    value: classroom,\n    onValueChange: setClassroom,\n    style: styles.class,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), React.createElement(Section, {\n    id: classroom,\n    value: section,\n    onValueChange: setSection,\n    style: styles.class,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: submitAttendance,\n    style: {\n      display: showSubmit ? 'block' : 'none',\n      height: 25,\n      borderRadius: 5,\n      textAlign: 'center',\n      backgroundColor: 'rgb(15, 159, 255)',\n      padding: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, nameSubmit)))), React.createElement(View, {\n    style: {\n      paddingTop: 180\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, React.createElement(DataTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, React.createElement(DataTable.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"ID\"), React.createElement(DataTable.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, \"Name\"), React.createElement(DataTable.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"Class\"), React.createElement(DataTable.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"Attendance\")), students.map(function (student) {\n    return React.createElement(DataTable.Row, {\n      key: student.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, student.id), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, student.fname, \" \", student.lname), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, student.classroom_name, \" \", student.section_name), React.createElement(DataTable.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, React.createElement(Attendance, {\n      value: attendance[student.id],\n      onValueChange: function onValueChange(selectedValue) {\n        return changeDescription(student.id, selectedValue);\n      },\n      style: styles.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    })));\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingLeft: '5%',\n    paddingRight: '6%',\n    paddingBottom: 20,\n    paddingTop: 20,\n    borderRadius: 5,\n    margin: 5\n  },\n  class: {\n    height: 25,\n    flex: 1,\n    borderRadius: 5,\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: 'rgb(15, 159, 255)',\n    marginRight: 20,\n    fontSize: 14\n  },\n  description: {\n    height: 25,\n    borderRadius: 5,\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: 'rgb(15, 159, 255)'\n  },\n  text: {\n    color: 'white',\n    paddingTop: 100,\n    fontSize: 22,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/opt/lampp/htdocs/Codi/LMS/lms_native/Take_Attendance.js"],"names":["React","useState","useEffect","LinearGradient","DataTable","API","Attendance","Classroom","Section","Take_Attendance","students","setStudents","showSubmit","setShowSubmit","attendance","setAttendance","section","setSection","classroom","setClassroom","nameSubmit","setNameSubmit","today","Date","year","getFullYear","month","getMonth","day","getDate","date","filter","fetchdata","post","then","res","result","data","s","section_id","map","attend","id","get","update","a","created_at","slice","length","student_id","description","checkSubmit","changeDescription","key","val","submitAttendance","updateFunction","i","student","reqBody","att","find","put","createFunction","JSON","stringify","flex","styles","text","container","viewSelect","class","display","height","borderRadius","textAlign","backgroundColor","padding","color","fontSize","paddingTop","fname","lname","classroom_name","section_name","selectedValue","StyleSheet","create","paddingLeft","paddingRight","paddingBottom","margin","marginRight","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, TouchableOpacity, StyleSheet } from 'react-native';\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { DataTable } from 'react-native-paper';\nimport API from './api';\nimport Attendance from './components/Attendance';\nimport Classroom from './components/Classroom';\nimport Section from './components/Section';\n\nexport default function Take_Attendance() {\n    const [students, setStudents] = useState([]);\n    const [showSubmit, setShowSubmit] = useState(false);\n    const [attendance, setAttendance] = useState({});\n    const [section, setSection] = useState(\"\");\n    const [classroom, setClassroom] = useState(\"\");\n    const [nameSubmit, setNameSubmit] = useState(\"Take Attendance\")\n\n    var today = new Date();\n    var year = today.getFullYear();\n    var month = (today.getMonth() + 1);\n    var day = today.getDate();\n\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n\n    var date = year + '-' + month + '-' + day;\n\n    const filter = {\n        section: section,\n        classroom: classroom,\n    };\n\n    const fetchdata = async () => {\n\n        setAttendance({});\n\n        await API.post(`stu-sec-class`)\n            .then(res => {\n                const result = res.data.data;\n                const data = result.filter(s => s.section_id == section);\n                if (data) {\n                    data.map(s => {\n                        const attend = attendance;\n                        attend[s.id] = \"Present\";\n                        setAttendance(attend);\n                    });\n                }\n                setStudents(data);\n            });\n\n        await API.get(`attendance`)\n            .then(res => {\n                const result = res.data.data;\n                const update = result.filter(a =>\n                    (a.created_at.slice(0, 10) == date && a.section_id == section)\n                );\n                if (update && update.length) {\n\n                    let attend = attendance;\n                    update.map(s => {\n                        attend[s.student_id] = s.description;\n                    });\n                    setAttendance(attend);\n\n                    setNameSubmit(\"Update Attendance\");\n                } else {\n                    setNameSubmit(\"Take Attendance\");\n                }\n            });\n\n        if (classroom == \"\") setSection(\"\");\n        checkSubmit();\n    }\n\n    const checkSubmit = () => {\n        (section !== \"\") ? setShowSubmit(true) : setShowSubmit(false);\n    }\n\n    // const setState = (nextState) => {\n    //     updateState(prevState => ({\n    //         ...prevState,\n    //         ...nextState\n    //     }));\n    // }\n\n    // const handleChange = e => {\n    //     let { name, value } = e.target;\n    //     setState({ [name]: value });\n    // }\n\n    const changeDescription = (key, val) => {\n        let attend = attendance;\n        attend[key] = val;\n        setAttendance({ ...attend });\n    }\n\n    const submitAttendance = async () => {\n\n        const updateFunction = async (update) => {\n            for (let i = 0; i < students.length; i++) {\n                let student = students[i];\n                let key = student.id;\n                let reqBody = {\n                    description: attendance[key],\n                    section_id: section,\n                    student_id: key\n                }\n                let att = update.find(a => a.student_id == key);\n                let id = att.id;\n\n                await API.put(`attendance/${id}`, reqBody);\n            }\n        }\n\n        const createFunction = async () => {\n            students.map(async (student) => {\n                let key = student.id;\n                let reqBody = {\n                    description: attendance[key],\n                    section_id: section,\n                    student_id: key\n                }\n                await API.post(`attendance`, reqBody);\n            });\n        }\n\n        await API.get(`attendance`)\n            .then(res => {\n                const result = res.data.data;\n                const update = result.filter(a =>\n                    (a.created_at.slice(0, 10) == date && a.section_id == section)\n                );\n                if (update && update.length) {\n                    updateFunction(update);\n                } else {\n                    createFunction();\n                }\n            });\n    }\n\n    useEffect(() => {\n        fetchdata();\n    }, [JSON.stringify(filter)]);\n\n\n    return (\n        <View style={{flex:1}}>\n            <LinearGradient colors={['#6D6F73', '#47484b']} >\n                <Text style={styles.text}>Student Attendance </Text>\n                <View style={styles.container} >\n\n                    <View style={styles.viewSelect}>\n                        <Classroom\n                            value={classroom}\n                            onValueChange={setClassroom}\n                            style={styles.class}\n                        />\n                        <Section\n                            id={classroom}\n                            value={section}\n                            onValueChange={setSection}\n                            style={styles.class}\n                        />\n                    </View>\n\n                    <TouchableOpacity\n                        onPress={submitAttendance}\n                        style={{\n                            display: showSubmit ? 'block' : 'none',\n                            height: 25,\n                            borderRadius: 5,\n                            textAlign: 'center',\n                            backgroundColor: 'rgb(15, 159, 255)',\n                            padding: 4,\n                        }}\n                    >\n                        <Text style={{ color: 'white', fontSize: 14 }}>{nameSubmit}</Text>\n                    </TouchableOpacity>\n\n                </View>\n            </LinearGradient>\n\n            <View style={{paddingTop:180}}>\n                <DataTable>\n                    <DataTable.Header>\n                        <DataTable.Title>ID</DataTable.Title>\n                        <DataTable.Title>Name</DataTable.Title>\n                        <DataTable.Title>Class</DataTable.Title>\n                        <DataTable.Title>Attendance</DataTable.Title>\n                    </DataTable.Header>\n\n                    {students.map(student => (\n                        <DataTable.Row key={student.id}>\n                            <DataTable.Cell>{student.id}</DataTable.Cell>\n                            <DataTable.Cell>{student.fname} {student.lname}</DataTable.Cell>\n                            <DataTable.Cell>{student.classroom_name} {student.section_name}</DataTable.Cell>\n                            <DataTable.Cell>\n                                <Attendance\n                                    value={attendance[student.id]}\n                                    onValueChange={selectedValue => changeDescription(student.id, selectedValue)}\n                                    style={styles.description}\n                                />\n                            </DataTable.Cell>\n                        </DataTable.Row>\n                    ))}\n                </DataTable>\n            </View>\n        </View >\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        paddingLeft: '5%',\n        paddingRight: '6%',\n        paddingBottom: 20,\n        paddingTop: 20,\n        borderRadius: 5,\n        margin: 5,\n    },\n\n    class: {\n        height: 25,\n        flex: 1,\n        borderRadius: 5,\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: 'rgb(15, 159, 255)',\n        marginRight: 20,\n        fontSize: 14\n    },\n    description: {\n        height: 25,\n        borderRadius: 5,\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: 'rgb(15, 159, 255)',\n    },\n    text: {\n        color: 'white',\n        paddingTop: 100,\n        fontSize: 22,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    }\n});"]},"metadata":{},"sourceType":"module"}