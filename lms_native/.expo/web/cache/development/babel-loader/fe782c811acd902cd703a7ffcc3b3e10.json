{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Codi/LMS/lms_native/Chart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { ProgressChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar Chart = function (_React$PureComponent) {\n  _inherits(Chart, _React$PureComponent);\n\n  var _super = _createSuper(Chart);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var data = [0.8, 0.3, 0.6];\n      return React.createElement(ProgressChart, {\n        data: data,\n        width: Dimensions.get('window').width,\n        height: 220,\n        chartConfig: {\n          backgroundColor: '#696969',\n          backgroundGradientFrom: '#696969',\n          backgroundGradientTo: '#ADD8E6',\n          decimalPlaces: 0,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n            return \"rgba(50, 50, 50, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }\n      });\n    }\n  }]);\n\n  return Chart;\n}(React.PureComponent);\n\nexport default Chart;","map":{"version":3,"sources":["/opt/lampp/htdocs/Codi/LMS/lms_native/Chart.js"],"names":["React","ProgressChart","Chart","data","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;;;;;IAIMC,K;;;;;;;;;;;;;WACF,kBAAS;AACL,UAAMC,IAAI,GAAG,CAAC,GAAD,EAAO,GAAP,EAAY,GAAZ,CAAb;AAIA,aAAO,oBAAC,aAAD;AACH,QAAA,IAAI,EAAEA,IADH;AAEH,QAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAF7B;AAGH,QAAA,MAAM,EAAE,GAHL;AAIH,QAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE,SADR;AAETC,UAAAA,sBAAsB,EAAE,SAFf;AAGTC,UAAAA,oBAAoB,EAAE,SAHb;AAITC,UAAAA,aAAa,EAAE,CAJN;AAKTC,UAAAA,KAAK,EAAE;AAAA,gBAACC,OAAD,uEAAW,CAAX;AAAA,yCAAqCA,OAArC;AAAA,WALE;AAMTC,UAAAA,KAAK,EAAE;AACHC,YAAAA,YAAY,EAAE;AADX;AANE,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAkBH;;;;EAxBed,KAAK,CAACe,a;;AAyBzB,eAAeb,KAAf","sourcesContent":["import React from 'react'\n\nimport { ProgressChart } from 'react-native-chart-kit'\n\nimport { Dimensions,View,Text } from 'react-native'\n\nclass Chart extends React.PureComponent {\n    render() {\n        const data = [0.8 , 0.3, 0.6]\n\n\n\n        return <ProgressChart\n            data={data}\n            width={Dimensions.get('window').width}\n            height={220}\n            chartConfig={{\n                backgroundColor: '#696969',\n                backgroundGradientFrom: '#696969',\n                backgroundGradientTo: '#ADD8E6',\n                decimalPlaces: 0, // optional, defaults to 2dp\n                color: (opacity = 2) => `rgba(50, 50, 50, ${opacity})`,\n                style: {\n                    borderRadius: 16\n                }\n            }}\n        />\n\n\n\n    }}\n export default Chart;\n"]},"metadata":{},"sourceType":"module"}